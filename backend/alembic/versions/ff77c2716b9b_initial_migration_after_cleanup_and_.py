"""Initial migration after cleanup and alembic reset

Revision ID: ff77c2716b9b
Revises: 
Create Date: 2025-04-08 21:43:50.428290

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ff77c2716b9b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_developer_profiles_id', table_name='developer_profiles')
    op.drop_table('developer_profiles')
    op.drop_index('ix_property_templates_id', table_name='property_templates')
    op.drop_table('property_templates')
    op.drop_index('ix_development_projects_id', table_name='development_projects')
    op.drop_table('development_projects')
    op.drop_index('ix_realtor_profiles_id', table_name='realtor_profiles')
    op.drop_table('realtor_profiles')
    op.drop_index('ix_chat_members_id', table_name='chat_members')
    op.drop_table('chat_members')
    op.drop_index('ix_chats_id', table_name='chats')
    op.drop_table('chats')
    op.drop_index('ix_floor_plans_id', table_name='floor_plans')
    op.drop_table('floor_plans')
    op.drop_index('ix_messages_id', table_name='messages')
    op.drop_table('messages')
    op.drop_index('ix_promotions_id', table_name='promotions')
    op.drop_table('promotions')
    op.drop_index('ix_message_files_id', table_name='message_files')
    op.drop_table('message_files')
    op.drop_index('ix_buildings_id', table_name='buildings')
    op.drop_table('buildings')
    op.drop_index('ix_message_reads_id', table_name='message_reads')
    op.drop_table('message_reads')
    op.drop_index('ix_clients_id', table_name='clients')
    op.drop_table('clients')
    op.drop_index('ix_construction_updates_id', table_name='construction_updates')
    op.drop_table('construction_updates')
    op.drop_index('ix_agent_profiles_id', table_name='agent_profiles')
    op.drop_table('agent_profiles')
    op.drop_column('users', 'agency_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('agency_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_table('agent_profiles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('agent_profiles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('company_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('license_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('experience_years', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('specialization', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('rating', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_deals', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('social_media', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='agent_profiles_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='agent_profiles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_agent_profiles_id', 'agent_profiles', ['id'], unique=False)
    op.create_table('construction_updates',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image_urls', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['development_projects.id'], name='construction_updates_project_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='construction_updates_pkey')
    )
    op.create_index('ix_construction_updates_id', 'construction_updates', ['id'], unique=False)
    op.create_table('clients',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('agent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_contact', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('next_meeting', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agent_profiles.id'], name='clients_agent_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='clients_pkey')
    )
    op.create_index('ix_clients_id', 'clients', ['id'], unique=False)
    op.create_table('message_reads',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('message_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('read_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], name='message_reads_message_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='message_reads_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='message_reads_pkey')
    )
    op.create_index('ix_message_reads_id', 'message_reads', ['id'], unique=False)
    op.create_table('buildings',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('buildings_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('floors', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_units', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('completion_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['development_projects.id'], name='buildings_project_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='buildings_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_buildings_id', 'buildings', ['id'], unique=False)
    op.create_table('message_files',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('message_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('file_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('file_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('file_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], name='message_files_message_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='message_files_pkey')
    )
    op.create_index('ix_message_files_id', 'message_files', ['id'], unique=False)
    op.create_table('promotions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('developer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('discount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('conditions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['developer_id'], ['developer_profiles.id'], name='promotions_developer_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='promotions_pkey')
    )
    op.create_index('ix_promotions_id', 'promotions', ['id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('chat_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sender_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('message_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('property_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], name='messages_chat_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name='messages_property_id_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name='messages_sender_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='messages_pkey')
    )
    op.create_index('ix_messages_id', 'messages', ['id'], unique=False)
    op.create_table('floor_plans',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('building_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('floor_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('total_units', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], name='floor_plans_building_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='floor_plans_pkey')
    )
    op.create_index('ix_floor_plans_id', 'floor_plans', ['id'], unique=False)
    op.create_table('chats',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('chats_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('creator_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('receiver_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], name='chats_creator_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], name='chats_receiver_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='chats_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_chats_id', 'chats', ['id'], unique=False)
    op.create_table('chat_members',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('chat_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('joined_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], name='chat_members_chat_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='chat_members_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='chat_members_pkey')
    )
    op.create_index('ix_chat_members_id', 'chat_members', ['id'], unique=False)
    op.create_table('realtor_profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('agency_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('license_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('experience_years', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('specialization', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rating', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='realtor_profiles_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='realtor_profiles_pkey'),
    sa.UniqueConstraint('license_number', name='realtor_profiles_license_number_key'),
    sa.UniqueConstraint('user_id', name='realtor_profiles_user_id_key')
    )
    op.create_index('ix_realtor_profiles_id', 'realtor_profiles', ['id'], unique=False)
    op.create_table('development_projects',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('developer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('completion_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('total_units', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sold_units', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('building_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('floors', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('parking_spaces', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['developer_id'], ['developer_profiles.id'], name='development_projects_developer_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='development_projects_pkey')
    )
    op.create_index('ix_development_projects_id', 'development_projects', ['id'], unique=False)
    op.create_table('property_templates',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('agent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('template_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agent_profiles.id'], name='property_templates_agent_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='property_templates_pkey')
    )
    op.create_index('ix_property_templates_id', 'property_templates', ['id'], unique=False)
    op.create_table('developer_profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('company_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('license_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('founded_year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('completed_projects', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_projects', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('specialization', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('social_media', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='developer_profiles_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='developer_profiles_pkey')
    )
    op.create_index('ix_developer_profiles_id', 'developer_profiles', ['id'], unique=False)
    # ### end Alembic commands ###
