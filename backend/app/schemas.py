from datetime import datetime
from pydantic import BaseModel, EmailStr
from typing import Optional, List
from enum import Enum

# üîπ ENUM –¥–ª—è —Ç–∏–ø–∞ —Å–¥–µ–ª–∫–∏ (–ü—Ä–æ–¥–∞–∂–∞ / –ê—Ä–µ–Ω–¥–∞)
class DealType(str, Enum):
    SALE = "sale"
    RENT = "rent"



# üîπ ENUM –¥–ª—è —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
class UserRole(str, Enum):
    PRIVATE = "private"  # –ß–∞—Å—Ç–Ω–æ–µ –ª–∏—Ü–æ
    AGENT = "agent"  # –ê–≥–µ–Ω—Ç
    DEVELOPER = "developer"  # –ó–∞—Å—Ç—Ä–æ–π—â–∏–∫


# üîπ –ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserBase(BaseModel):
    email: EmailStr
    username: str


# üîπ –°—Ö–µ–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserCreate(UserBase):
    password: str
    role: UserRole = UserRole.PRIVATE  
    first_name: Optional[str] = None
    last_name: Optional[str] = None
    phone: Optional[str] = None
    

class UserUpdate(BaseModel):
    username: str
    email: EmailStr
    first_name: Optional[str] = None
    last_name: Optional[str] = None
    phone: Optional[str] = None
    avatar_url: Optional[str] = None


# üîπ –°—Ö–µ–º–∞ –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
class UserOut(BaseModel):
    id: int
    email: EmailStr
    username: Optional[str] = None
    first_name: Optional[str] = None
    last_name: Optional[str] = None
    phone: Optional[str] = None
    avatar_url: Optional[str] = None

    model_config = {"from_attributes": True}


# üîπ –ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
class PropertyBase(BaseModel):
    title: str
    description: Optional[str] = None
    price: float
    address: str
    rooms: Optional[int] = None
    area: Optional[float] = None
    floor: Optional[int] = None
    total_floors: Optional[int] = None
    property_type: str
    latitude: Optional[float] = None
    longitude: Optional[float] = None
    image_url: Optional[str] = None
    deal_type: DealType  # –ò—Å–ø–æ–ª—å–∑—É–µ–º ENUM

    class Config:
        from_attributes = True  # Pydantic v2 (–∑–∞–º–µ–Ω–∞ orm_mode)

class PropertyImageOut(BaseModel):
    id: int
    image_url: str
    uploaded_at: datetime

    class Config:
        from_attributes = True


class PropertyCreate(PropertyBase):
    pass


# üîπ –°—Ö–µ–º–∞ –≤—ã–≤–æ–¥–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
class PropertyOut(PropertyBase):
    id: int
    owner_id: int
    images: Optional[List[PropertyImageOut]] = []

    class Config:
        from_attributes = True


# üîπ –°—Ö–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
class PropertyUpdate(BaseModel):
    title: Optional[str] = None
    description: Optional[str] = None
    price: Optional[float] = None
    address: Optional[str] = None
    rooms: Optional[int] = None
    area: Optional[float] = None
    floor: Optional[int] = None
    total_floors: Optional[int] = None
    property_type: Optional[str] = None
    latitude: Optional[float] = None
    longitude: Optional[float] = None
    image_url: Optional[str] = None
    deal_type: Optional[DealType] = None  # –°–¥–µ–ª–∞–ª ENUM –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º

    class Config:
        from_attributes = True


# üîπ –°—Ö–µ–º—ã –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
class FavoriteBase(BaseModel):
    property_id: int


class FavoriteCreate(FavoriteBase):
    pass


class FavoriteOut(BaseModel):
    id: int
    property_id: int
    created_at: datetime

    class Config:
        from_attributes = True


# üîπ –°—Ö–µ–º—ã –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
class ReviewBase(BaseModel):
    rating: int
    comment: Optional[str] = None
    

class ReviewCreate(ReviewBase):
    property_id: int


class ReviewOut(ReviewBase):
    id: int
    user_id: int
    property_id: int


    class Config:
        orm_mode = True


class HistoryBase(BaseModel):
    property_id: int

class HistoryCreate(HistoryBase):
    pass

class HistoryOut(HistoryBase):
    id: int
    viewed_at: datetime

    class Config:
        orm_mode = True


# üîπ –°—Ö–µ–º–∞ –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserLogin(BaseModel):
    email: EmailStr
    password: str